{"version":3,"sources":["webpack:///./src/pages/music/releases.js","webpack:///./src/pages/music/releases.module.css"],"names":["defaultModalState","isVisible","node","image","ReleasesIndex","data","location","React","useState","modal","setModal","siteTitle","site","siteMetadata","title","releases","allMarkdownRemark","edges","images","allFile","theme","showName","color","className","releasesStyles","container","map","frontmatter","fields","slug","find","img","name","coverImg","block","to","key","fluid","childImageSharp","alt","content","date","releaseDate","albumType","modalContainer","Modal","handleClose","pageQuery","module","exports"],"mappings":"4FAAA,gLAWMA,EAAoB,CAAEC,WAAW,EAAOC,KAAM,KAAMC,MAAO,MA4ClDC,UA1CO,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAAe,EAClBC,IAAMC,SAASR,GAAlCS,EADqC,KAC9BC,EAD8B,KAGtCC,EAAYN,EAAKO,KAAKC,aAAaC,MACnCC,EAAWV,EAAKW,kBAAkBC,MAClCC,EAASb,EAAKc,QAAQF,MAM5B,OACE,kBAAC,IAAD,CAAQX,SAAUA,EAAUQ,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,aACX,kBAAC,IAAD,CAAKR,SAAUA,EAAUc,MAAM,SAC/B,kBAAC,IAAD,CAAQd,SAAUA,EAAUe,UAAU,EAAMD,MAAM,OAAOE,MAAM,YAC/D,yBAAKC,UAAWC,IAAeC,WAC5BV,EAASW,KAAI,YAAe,IAAD,EAAXxB,EAAW,EAAXA,KACTY,EAAQZ,EAAKyB,YAAYb,OAASZ,EAAK0B,OAAOC,KAC9C1B,EAAK,UAAGe,EAAOY,MAAK,SAACC,GAAD,OAASA,EAAI7B,KAAK8B,OAAS9B,EAAKyB,YAAYM,mBAA3D,aAAG,EAAmE/B,KACjF,OACE,kBAAC,OAAD,CAAMqB,UAAWC,IAAeU,MAAOC,GAAE,kBAAoBjC,EAAK0B,OAAOC,KAAQO,IAAKlC,EAAK0B,OAAOC,MAChG,kBAAC,IAAD,CAAKN,UAAWC,IAAeO,IAAKM,MAAOlC,EAAMmC,gBAAgBD,MAAOE,IAAI,cAC5E,yBAAKhB,UAAWC,IAAegB,SAC7B,wBAAIjB,UAAWC,IAAeV,OAAQA,GACtC,uBAAGS,UAAWC,IAAeiB,MAC1BvC,EAAKyB,YAAYe,YADpB,MACoCxC,EAAKyB,YAAYgB,iBAO9DlC,EAAMR,WACL,yBAAKsB,UAAWC,IAAeoB,gBAC7B,kBAACC,MAAD,CAAO3C,KAAMO,EAAMP,KAAMC,MAAOM,EAAMN,MAAO2C,YA5BjC,WAClBpC,EAASV,SAoCN,IAAM+C,EAAS,a,qBCxDtBC,EAAOC,QAAU,CAAC,UAAY,oCAAoC,MAAQ,gCAAgC,QAAU,kCAAkC,IAAM,8BAA8B,KAAO,+BAA+B,QAAU,kCAAkC,KAAO,+BAA+B,eAAiB","file":"component---src-pages-music-releases-js-6d4e90597835cc49693e.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\nimport Header from '../../components/Header'\nimport Nav from '../../components/Nav'\nimport Layout from '../../components/Layout'\nimport SEO from '../../components/SEO'\n\nimport releasesStyles from './releases.module.css'\n\nconst defaultModalState = { isVisible: false, node: null, image: null }\n\nconst ReleasesIndex = ({ data, location }) => {\n  const [modal, setModal] = React.useState(defaultModalState)\n\n  const siteTitle = data.site.siteMetadata.title\n  const releases = data.allMarkdownRemark.edges\n  const images = data.allFile.edges\n\n  const handleClose = () => {\n    setModal(defaultModalState)\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"Releases\" />\n      <Nav location={location} theme=\"dark\" />\n      <Header location={location} showName={true} theme=\"dark\" color=\"#0f001a\" />\n      <div className={releasesStyles.container}>\n        {releases.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          const image = images.find((img) => img.node.name === node.frontmatter.coverImg)?.node\n          return (\n            <Link className={releasesStyles.block} to={`/music/releases${node.fields.slug}`} key={node.fields.slug}>\n              <Img className={releasesStyles.img} fluid={image.childImageSharp.fluid} alt=\"Album Art\" />\n              <div className={releasesStyles.content}>\n                <h3 className={releasesStyles.title}>{title}</h3>\n                <p className={releasesStyles.date}>\n                  {node.frontmatter.releaseDate} - {node.frontmatter.albumType}\n                </p>\n              </div>\n            </Link>\n          )\n        })}\n      </div>\n      {modal.isVisible && (\n        <div className={releasesStyles.modalContainer}>\n          <Modal node={modal.node} image={modal.image} handleClose={handleClose} />\n        </div>\n      )}\n    </Layout>\n  )\n}\n\nexport default ReleasesIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: 1000\n      filter: { fileAbsolutePath: { regex: \"music/releases/.*\\\\\\\\.md$/\" } }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            releaseDate\n            title\n            coverImg\n            albumType\n            tracks\n          }\n        }\n      }\n    }\n    allFile(filter: { extension: { regex: \"/(jpg)|(jpeg)|(png)/\" }, sourceInstanceName: { eq: \"releaseImages\" } }) {\n      edges {\n        node {\n          id\n          name\n          extension\n          childImageSharp {\n            fluid {\n              base64\n              aspectRatio\n              src\n              srcSet\n              sizes\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"releases-module--container--14Q5Y\",\"block\":\"releases-module--block--2C6Xi\",\"content\":\"releases-module--content--3dQWV\",\"img\":\"releases-module--img--2t_8X\",\"date\":\"releases-module--date--820uW\",\"preview\":\"releases-module--preview--J4J1M\",\"link\":\"releases-module--link--2SIHP\",\"modalContainer\":\"releases-module--modalContainer--1gn1i\"};"],"sourceRoot":""}